type Query {
    """Fetches all apps that match the filter."""
    apps(filter: AppFilter): AppPage

    """Get an individual app."""
    app(appid: ID!): App

    """Get an individual user."""
    user(steamid: ID!): User

    """Fetches all users with the given steamids."""
    users(steamids: [ID!]!): [User]

    """Fetch a list of all categories."""
    categories: [String]
}

"""Information about a Steam application."""
type App {
    """The unique appid."""
    appid: ID!

    """The name of that application."""
    name: String!

    """The categories the application is part of."""
    categories: [String]
}

"""A filter for searching apps."""
input AppFilter {
    """The appids filter by."""
    appids: [ID!]

    """The categories to filter by."""
    categories: [String!]

    """How many results to return."""
    limit: Int = 100

    """The page to start from."""
    page: Int = 0
}

"""A page of a list of apps."""
type AppPage {
    """A list of apps."""
    content: [App]

    """Information to aid in pagination."""
    pageInfo: PageInfo!
}


"""Information about a page."""
type PageInfo {
    """When paginating forwards, are there more items?"""
    hasNext: Boolean!

    """When paginating backwards, are there more items?"""
    hasPrevious: Boolean!

    """The total number of elements."""
    totalElements: Int!

    """The total number of pages."""
    totalPages: Int!
}

"""Information about a user."""
type User {
    """The steamid of the user."""
    steamid: ID!

    """The display name of the user."""
    name: String

    """The apps that the user owns."""
    ownedApps: [App]
}